include(CheckIncludeFiles)
include(CheckIncludeFileCXX)
include(CheckFunctionExists)
include(CheckCXXCompilerFlag)
include(CheckSymbolExists)
include(CheckCCompilerFlag)
include(FindPackageHandleStandardArgs)

if(CMAKE_COMPILER_IS_GNUCXX)
  if(CMAKE_CXX_COMPILER_VERSION VERSION_LESS 8.1)
    message(FATAL_ERROR "GCC 8.1+ required due to C++17 requirements")
  endif()
endif()

check_symbol_exists(__func__ "" HAVE_FUNC)
if(HAVE_FUNC)
  add_definitions(-DHAVE_FUNC)
endif(HAVE_FUNC)
check_symbol_exists(__PRETTY_FUNCTION__ "" HAVE_PRETTY_FUNC)
if(HAVE_PRETTY_FUNC)
  add_definitions(-DHAVE_PRETTY_FUNC)
endif(HAVE_PRETTY_FUNC)

## fmt
find_package(fmt 6.0.0 QUIET)
if(fmt_FOUND)
  include_directories(SYSTEM "${fmt_INCLUDE_DIR}")
else(fmt_FOUND)
  message(FATAL_ERROR "fmt library not found")
endif(fmt_FOUND)
list(APPEND target_deps fmt::fmt)
